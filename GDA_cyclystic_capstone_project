--Importing the dataset 

CREATE TABLE jan
(ride_id varchar,
 rideable_type varchar,
 started_at TIMESTAMP,
 ended_at TIMESTAMP,
 start_station_name varchar,
 start_station_id varchar,
 end_station_name varchar,
 end_stattion_id varchar,
 start_lat real,
 start_lng real,
 end_lat real,
 end_lng real, 
 member varchar);
 
CREATE TABLE feb
(ride_id varchar,
 rideable_type varchar,
 started_at TIMESTAMP,
 ended_at TIMESTAMP,
 start_station_name varchar,
 start_station_id varchar,
 end_station_name varchar,
 end_stattion_id varchar,
 start_lat real,
 start_lng real,
 end_lat real,
 end_lng real, 
 member varchar);

CREATE TABLE mar
(ride_id varchar,
 rideable_type varchar,
 started_at TIMESTAMP,
 ended_at TIMESTAMP,
 start_station_name varchar,
 start_station_id varchar,
 end_station_name varchar,
 end_stattion_id varchar,
 start_lat real,
 start_lng real,
 end_lat real,
 end_lng real, 
 member varchar);

CREATE TABLE apr
(ride_id varchar,
 rideable_type varchar,
 started_at TIMESTAMP,
 ended_at TIMESTAMP,
 start_station_name varchar,
 start_station_id varchar,
 end_station_name varchar,
 end_stattion_id varchar,
 start_lat real,
 start_lng real,
 end_lat real,
 end_lng real, 
 member varchar);
 
CREATE TABLE may
(ride_id varchar,
 rideable_type varchar,
 started_at TIMESTAMP,
 ended_at TIMESTAMP,
 start_station_name varchar,
 start_station_id varchar,
 end_station_name varchar,
 end_stattion_id varchar,
 start_lat real,
 start_lng real,
 end_lat real,
 end_lng real, 
 member varchar);
 
 CREATE TABLE jun
(ride_id varchar,
 rideable_type varchar,
 started_at TIMESTAMP,
 ended_at TIMESTAMP,
 start_station_name varchar,
 start_station_id varchar,
 end_station_name varchar,
 end_stattion_id varchar,
 start_lat real,
 start_lng real,
 end_lat real,
 end_lng real, 
 member varchar);

CREATE TABLE jul
(ride_id varchar,
 rideable_type varchar,
 started_at TIMESTAMP,
 ended_at TIMESTAMP,
 start_station_name varchar,
 start_station_id varchar,
 end_station_name varchar,
 end_stattion_id varchar,
 start_lat real,
 start_lng real,
 end_lat real,
 end_lng real, 
 member varchar);

CREATE TABLE aug
(ride_id varchar,
 rideable_type varchar,
 started_at TIMESTAMP,
 ended_at TIMESTAMP,
 start_station_name varchar,
 start_station_id varchar,
 end_station_name varchar,
 end_stattion_id varchar,
 start_lat real,
 start_lng real,
 end_lat real,
 end_lng real, 
 member varchar);

CREATE TABLE sept
(ride_id varchar,
 rideable_type varchar,
 started_at TIMESTAMP,
 ended_at TIMESTAMP,
 start_station_name varchar,
 start_station_id varchar,
 end_station_name varchar,
 end_stattion_id varchar,
 start_lat real,
 start_lng real,
 end_lat real,
 end_lng real, 
 member varchar);
 
 CREATE TABLE oct
(ride_id varchar,
 rideable_type varchar,
 started_at TIMESTAMP,
 ended_at TIMESTAMP,
 start_station_name varchar,
 start_station_id varchar,
 end_station_name varchar,
 end_stattion_id varchar,
 start_lat real,
 start_lng real,
 end_lat real,
 end_lng real, 
 member varchar);

CREATE TABLE nov
(ride_id varchar,
 rideable_type varchar,
 started_at TIMESTAMP,
 ended_at TIMESTAMP,
 start_station_name varchar,
 start_station_id varchar,
 end_station_name varchar,
 end_stattion_id varchar,
 start_lat real,
 start_lng real,
 end_lat real,
 end_lng real, 
 member varchar);

CREATE TABLE dec
(ride_id varchar,
 rideable_type varchar,
 started_at TIMESTAMP,
 ended_at TIMESTAMP,
 start_station_name varchar,
 start_station_id varchar,
 end_station_name varchar,
 end_stattion_id varchar,
 start_lat real,
 start_lng real,
 end_lat real,
 end_lng real, 
 member varchar);
 
--Combining all the 12-months dataset together using the 'UNION ALL' statement
 
 CREATE VIEW all_trips_22 AS
 SELECT * FROM jan
 UNION ALL
 SELECT * FROM feb
 UNION ALL
 SELECT * FROM mar
 UNION ALL
 SELECT * FROM apr
 UNION ALL
 SELECT * FROM may
 UNION ALL
 SELECT * FROM jun
 UNION ALL
 SELECT * FROM jul
 UNION ALL
 SELECT * FROM aug
 UNION ALL
 SELECT * FROM sept
 UNION ALL
 SELECT * FROM oct
 UNION ALL
 SELECT * FROM nov
 UNION ALL
 SELECT * FROM dec;

--Change column name from 'member_casual' to 'user_type' for clarity 

ALTER TABLE all_trips_22
RENAME COLUMN member_casual TO user_type;
 
-- Total number of rides by user_type 

SELECT user_type,
COUNT (ride_id)
FROM all_trips_22
GROUP BY user_type;

--Total number of rides by month

SELECT
 user_type,
 CASE WHEN DATE_PART('month', started_at) = 1 THEN 'January'
         WHEN DATE_PART('month', started_at) = 2 THEN 'February'
         WHEN DATE_PART('month', started_at) = 3 THEN 'March'
         WHEN DATE_PART('month', started_at) = 4 THEN 'April'
      WHEN DATE_PART('month', started_at) = 5 THEN 'May'
      WHEN DATE_PART('month', started_at) = 6 THEN 'June'
      WHEN DATE_PART('month', started_at) = 7 THEN 'July'
      WHEN DATE_PART('month', started_at) = 8 THEN 'August'
      WHEN DATE_PART('month', started_at) = 9 THEN 'September'
      WHEN DATE_PART('month', started_at) = 10 THEN 'October'
      WHEN DATE_PART('month', started_at) = 11 THEN 'November'
   ELSE 'December'
   END AS month,
COUNT(*) total_rides
FROM all_trips_22
GROUP BY
     month,
  user_type
ORDER BY total_rides DESC;

-- Total number of rides by days of week

SELECT
 user_type,
 CASE WHEN DATE_PART('dow', started_at) = 1 THEN 'Mon'
         WHEN DATE_PART('dow', started_at) = 2 THEN 'Tues'
         WHEN DATE_PART('dow', started_at) = 3 THEN 'Wed'
         WHEN DATE_PART('dow', started_at) = 4 THEN 'Thurs'
      WHEN DATE_PART('dow', started_at) = 5 THEN 'Fri'
      WHEN DATE_PART('dow', started_at) = 6 THEN 'Sat'
   ELSE 'Sun'
   END AS day_of_week,
COUNT(*) total_rides
FROM all_trips_22
GROUP BY
     day_of_week,
  user_type
ORDER BY total_rides DESC;

-- Preferrred bike type by user type

SELECT 
 user_type,
 rideable_type,
 COUNT(*) total_rides
FROM all_trips_22
GROUP BY 
 user_type,
 rideable_type
ORDER BY 3 DESC;

-- TOP 5 most popular start stations

SELECT 
 start_station_name,
 COUNT(*) total_rides
FROM all_trips_22
WHERE start_station_name IS NOT NULL
GROUP BY 
  1
ORDER BY 2 DESC
LIMIT 5;

-- TOP 5 most popular end stations

SELECT 
 end_station_name,
 COUNT(*) total_rides
FROM all_trips_22
WHERE end_station_name IS NOT NULL
GROUP BY 
  1
ORDER BY 2 DESC
LIMIT 5;

--Bike rides per hour

SELECT 
    EXTRACT(HOUR FROM started_at) AS hour_of_day,
    COUNT(*) AS total_rides
FROM 
    all_trips_22
GROUP BY 
    hour_of_day
ORDER BY 
    hour_of_day;
 
-- Average ride time (in minutes) by user type

SELECT 
    user_type,
    ROUND(AVG(EXTRACT(EPOCH FROM (ended_at - started_at)))/60 , 1) AS avg_ride_time_minutes
FROM 
    all_trips_22
GROUP BY 
    user_type;





